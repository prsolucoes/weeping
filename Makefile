#############################################################################
# Makefile for building: weeping
# Generated by qmake (2.01a) (Qt 4.8.4) on: ven. janv. 31 18:15:12 2014
# Project:  weeping.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug CONFIG+=declarative_debug -o Makefile weeping.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDEBUG
CFLAGS        = -m64 -pipe -g -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -std=c++11 -g -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)   -lsfml-system -lsfml-window -lsfml-graphics -lsfml-audio -lsfml-network -llua -ldl 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = main.cpp \
		world.cpp \
		utils.cpp \
		datatables.cpp \
		application.cpp \
		controllers/playercontroller.cpp \
		entities/textnode.cpp \
		entities/spritenode.cpp \
		entities/soundnode.cpp \
		entities/scenenode.cpp \
		entities/quadtree.cpp \
		entities/particlenode.cpp \
		entities/entity.cpp \
		entities/emitternode.cpp \
		events/commandqueue.cpp \
		events/command.cpp \
		GUI/widget.cpp \
		GUI/lineedit.cpp \
		GUI/label.cpp \
		GUI/container.cpp \
		GUI/button.cpp \
		lua/SLB.cpp \
		lua/luaexposal.cpp \
		resources/soundplayer.cpp \
		resources/scriptplayer.cpp \
		resources/particle.cpp \
		resources/musicplayer.cpp \
		resources/animation.cpp \
		resources/affectors.cpp \
		states/titlestate.cpp \
		states/statestack.cpp \
		states/state.cpp \
		states/paralleltask.cpp 
OBJECTS       = .obj/main.o \
		.obj/world.o \
		.obj/utils.o \
		.obj/datatables.o \
		.obj/application.o \
		.obj/playercontroller.o \
		.obj/textnode.o \
		.obj/spritenode.o \
		.obj/soundnode.o \
		.obj/scenenode.o \
		.obj/quadtree.o \
		.obj/particlenode.o \
		.obj/entity.o \
		.obj/emitternode.o \
		.obj/commandqueue.o \
		.obj/command.o \
		.obj/widget.o \
		.obj/lineedit.o \
		.obj/label.o \
		.obj/container.o \
		.obj/button.o \
		.obj/SLB.o \
		.obj/luaexposal.o \
		.obj/soundplayer.o \
		.obj/scriptplayer.o \
		.obj/particle.o \
		.obj/musicplayer.o \
		.obj/animation.o \
		.obj/affectors.o \
		.obj/titlestate.o \
		.obj/statestack.o \
		.obj/state.o \
		.obj/paralleltask.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		weeping.pro
QMAKE_TARGET  = weeping
DESTDIR       = 
TARGET        = weeping

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: weeping.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug CONFIG+=declarative_debug -o Makefile weeping.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug CONFIG+=declarative_debug -o Makefile weeping.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/weeping1.0.0 || $(MKDIR) .obj/weeping1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/weeping1.0.0/ && (cd `dirname .obj/weeping1.0.0` && $(TAR) weeping1.0.0.tar weeping1.0.0 && $(COMPRESS) weeping1.0.0.tar) && $(MOVE) `dirname .obj/weeping1.0.0`/weeping1.0.0.tar.gz . && $(DEL_FILE) -r .obj/weeping1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

.obj/main.o: main.cpp application.h \
		resources/resourceidentifiers.h \
		resources/resourceholder.h \
		controllers/playercontroller.h \
		events/command.h \
		events/category.h \
		states/statestack.h \
		states/state.h \
		states/stateidentifiers.h \
		resources/musicplayer.h \
		resources/soundplayer.h \
		resources/scriptplayer.h \
		lua/SLB.hpp \
		lua/luaexposal.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o main.cpp

.obj/world.o: world.cpp world.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h \
		events/category.h \
		events/commandqueue.h \
		events/command.h \
		entities/spritenode.h \
		entities/scenenode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/world.o world.cpp

.obj/utils.o: utils.cpp utils.h \
		resources/animation.h \
		utils.inl
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/utils.o utils.cpp

.obj/datatables.o: datatables.cpp datatables.h \
		resources/resourceidentifiers.h \
		resources/particle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/datatables.o datatables.cpp

.obj/application.o: application.cpp application.h \
		resources/resourceidentifiers.h \
		resources/resourceholder.h \
		controllers/playercontroller.h \
		events/command.h \
		events/category.h \
		states/statestack.h \
		states/state.h \
		states/stateidentifiers.h \
		resources/musicplayer.h \
		resources/soundplayer.h \
		resources/scriptplayer.h \
		lua/SLB.hpp \
		lua/luaexposal.h \
		utils.h \
		resources/animation.h \
		utils.inl \
		states/titlestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/application.o application.cpp

.obj/playercontroller.o: controllers/playercontroller.cpp controllers/playercontroller.h \
		events/command.h \
		events/category.h \
		events/commandqueue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/playercontroller.o controllers/playercontroller.cpp

.obj/textnode.o: entities/textnode.cpp entities/textnode.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h \
		resources/resourceidentifiers.h \
		resources/resourceholder.h \
		utils.h \
		resources/animation.h \
		utils.inl
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/textnode.o entities/textnode.cpp

.obj/spritenode.o: entities/spritenode.cpp entities/spritenode.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/spritenode.o entities/spritenode.cpp

.obj/soundnode.o: entities/soundnode.cpp entities/soundnode.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h \
		resources/soundplayer.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/soundnode.o entities/soundnode.cpp

.obj/scenenode.o: entities/scenenode.cpp entities/scenenode.h \
		events/command.h \
		events/category.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/scenenode.o entities/scenenode.cpp

.obj/quadtree.o: entities/quadtree.cpp entities/quadtree.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/quadtree.o entities/quadtree.cpp

.obj/particlenode.o: entities/particlenode.cpp entities/particlenode.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h \
		resources/particle.h \
		resources/affectors.h \
		events/commandqueue.h \
		datatables.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/particlenode.o entities/particlenode.cpp

.obj/entity.o: entities/entity.cpp entities/entity.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h \
		entities/soundnode.h \
		resources/soundplayer.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h \
		events/commandqueue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/entity.o entities/entity.cpp

.obj/emitternode.o: entities/emitternode.cpp entities/emitternode.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h \
		resources/particle.h \
		events/commandqueue.h \
		entities/particlenode.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h \
		resources/affectors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/emitternode.o entities/emitternode.cpp

.obj/commandqueue.o: events/commandqueue.cpp events/commandqueue.h \
		events/command.h \
		events/category.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/commandqueue.o events/commandqueue.cpp

.obj/command.o: events/command.cpp events/command.h \
		events/category.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/command.o events/command.cpp

.obj/widget.o: GUI/widget.cpp GUI/widget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/widget.o GUI/widget.cpp

.obj/lineedit.o: GUI/lineedit.cpp GUI/lineedit.h \
		GUI/widget.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/lineedit.o GUI/lineedit.cpp

.obj/label.o: GUI/label.cpp GUI/label.h \
		GUI/widget.h \
		resources/resourceidentifiers.h \
		resources/resourceholder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/label.o GUI/label.cpp

.obj/container.o: GUI/container.cpp GUI/container.h \
		GUI/widget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/container.o GUI/container.cpp

.obj/button.o: GUI/button.cpp GUI/button.h \
		GUI/widget.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h \
		utils.h \
		resources/animation.h \
		utils.inl
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/button.o GUI/button.cpp

.obj/SLB.o: lua/SLB.cpp lua/SLB.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/SLB.o lua/SLB.cpp

.obj/luaexposal.o: lua/luaexposal.cpp lua/luaexposal.h \
		resources/scriptplayer.h \
		lua/SLB.hpp \
		resources/resourceidentifiers.h \
		entities/entity.h \
		entities/scenenode.h \
		events/command.h \
		events/category.h \
		entities/soundnode.h \
		resources/soundplayer.h \
		resources/resourceholder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/luaexposal.o lua/luaexposal.cpp

.obj/soundplayer.o: resources/soundplayer.cpp resources/soundplayer.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/soundplayer.o resources/soundplayer.cpp

.obj/scriptplayer.o: resources/scriptplayer.cpp resources/scriptplayer.h \
		lua/SLB.hpp \
		resources/resourceidentifiers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/scriptplayer.o resources/scriptplayer.cpp

.obj/particle.o: resources/particle.cpp resources/particle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/particle.o resources/particle.cpp

.obj/musicplayer.o: resources/musicplayer.cpp resources/musicplayer.h \
		resources/resourceholder.h \
		resources/resourceidentifiers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/musicplayer.o resources/musicplayer.cpp

.obj/animation.o: resources/animation.cpp resources/animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/animation.o resources/animation.cpp

.obj/affectors.o: resources/affectors.cpp resources/affectors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/affectors.o resources/affectors.cpp

.obj/titlestate.o: states/titlestate.cpp states/titlestate.h \
		states/state.h \
		states/stateidentifiers.h \
		resources/resourceidentifiers.h \
		resources/resourceholder.h \
		resources/musicplayer.h \
		resources/soundplayer.h \
		resources/scriptplayer.h \
		lua/SLB.hpp \
		utils.h \
		resources/animation.h \
		utils.inl
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/titlestate.o states/titlestate.cpp

.obj/statestack.o: states/statestack.cpp states/statestack.h \
		states/state.h \
		states/stateidentifiers.h \
		resources/resourceidentifiers.h \
		resources/resourceholder.h \
		resources/musicplayer.h \
		resources/soundplayer.h \
		resources/scriptplayer.h \
		lua/SLB.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/statestack.o states/statestack.cpp

.obj/state.o: states/state.cpp states/state.h \
		states/stateidentifiers.h \
		resources/resourceidentifiers.h \
		resources/resourceholder.h \
		resources/musicplayer.h \
		resources/soundplayer.h \
		resources/scriptplayer.h \
		lua/SLB.hpp \
		states/statestack.h \
		controllers/playercontroller.h \
		events/command.h \
		events/category.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/state.o states/state.cpp

.obj/paralleltask.o: states/paralleltask.cpp states/paralleltask.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/paralleltask.o states/paralleltask.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

